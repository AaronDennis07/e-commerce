import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React, { useState } from 'react'
import List from './components/List'
import { gql, useQuery } from "@apollo/client"
import Item from './components/Item'


const fetchItems = gql`
query Populate($first: Int, $after: Int) {
  fetchItems(first: $first,after: $after) {
    pageInfo {
      endCursor
      hasNextPage
    }
    edges {
      cursor
      node {
        name
        price
      }
    }
  }
}
`

const Home: NextPage = () => {

  const [value, setValue] = useState("")
   const {loading,error,data,fetchMore} = useQuery(fetchItems,{
    variables:{
      first:3
    }
  }) 
  if(loading) return <div>Loading...</div>
  if(error) return <div>error</div>
  const {endCursor,hasNextPage} = data.fetchItems.pageInfo
  console.log(data.fetchItems.pageInfo)
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setValue(e.target.value)
  }
 
  console.log(data)
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className={styles.title}>E Commerce</h1>
        <section className={styles.search}>
          <form action="/list" method="get">
            <input type="text" autoComplete='off' onChange={handleChange} name="search" />
            <button type='submit' className={styles["button-3"]}>Search</button>
          </form>
          <List value={value} />
        </section>
      
          <div className={styles.container}>
            {data?.fetchItems.edges.map((t:any,i:Number)=>(
              <Item key={i}name={t.node.name} price={t.node.price}/>
            ))}
        </div>

        {hasNextPage ?
        <div className={styles.centerButton}>
        <button  className={styles["button-22"]}
          onClick={
            ()=>{
              fetchMore({
                variables:{after:endCursor},
                updateQuery(previousQueryResult, {fetchMoreResult}) {
                  console.log(previousQueryResult)
                    fetchMoreResult.fetchItems.edges= [
                      ...previousQueryResult.fetchItems.edges,
                      ...fetchMoreResult.fetchItems.edges
                    ]
                    return fetchMoreResult
                },
              })
            }
          }
          
        >Load more  </button>     
      </div>
      :
      <p className={styles.footer}>That's all for the menu! More coming soon... </p>
      }
        
         
      </main>
    </div>
  )
}

export default Home
